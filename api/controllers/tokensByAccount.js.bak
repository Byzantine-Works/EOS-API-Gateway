'use strict';
const eosapi = require('../eosapi.js');
const config = require("../config");
/*
 'use strict' is not required but helpful for turning syntactical errors into true errors in the program flow
 https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode
*/

/*
 Modules make it possible to import JavaScript files into your application.  Modules are imported
 using 'require' statements that give you a reference to the module.

  It is a good idea to list the modules that your application depends on in the package.json in the project root
 */
var util = require('util');

/*
 Once you 'require' a module you can reference the things that it exports.  These are defined in module.exports.

 For a controller in a127 (which this is) you should export the functions referenced in your Swagger document by name.

 Either:
  - The HTTP Verb of the corresponding operation (get, put, post, delete, etc)
  - Or the operationId associated with the operation in your Swagger document

  In the starter/skeleton project the 'get' operation on the '/hello' path has an operationId named 'hello'.  Here,
  we specify that in the exports of this module that 'hello' maps to the function named 'hello'
 */
module.exports = {
  tokensByAccount: tokensByAccount
};
var tokenList = config.tokens;

/*
  Functions in a127 controllers used for operations should take two parameters:

  Param 1: a handle to the request object
  Param 2: a handle to the response object
 */
function tokensByAccount(req, res) {
  // variables defined in the Swagger document can be referenced using req.swagger.params.{parameter_name}
  // var name = req.swagger.params.name.value || 'stranger';
  var account = req.swagger.params.account.value;
  console.log("Processing Token Balances for account=> " + account);
  getTokensByAccount(account).then(function (tokenArray) {
    console.log("outer function : superset=" + tokenList.length + " subset=" + tokenArray.length);
    console.log("tokensByAccount=>count: " + tokenArray.length + " data:" + JSON.stringify(tokenArray));
    res.json(tokenArray);
    //res.end();
  }).catch(function (e) {
    console.log(e);
    console.log("Error occured while processing account " + account);
    //next(err);
  });
}

async function getTokensByAccount(account) {
  var theTokenArray = [];
  for (var i = 0, len = tokenList.length; i < len; i++) {
    const balance = await eosapi.getTokensByAccount(tokenList[i].contract, account);
    var balanceStr = balance.toString().split(' ')[0];
    var data = {
      contract: tokenList[i].contract,
      symbol: tokenList[i].symbol,
      balance: (balanceStr ? balanceStr : "0.0000")
    };
    console.log("size is" + theTokenArray.length + " pushing...." + data);
    theTokenArray.push(data);
  }
  return theTokenArray;
}